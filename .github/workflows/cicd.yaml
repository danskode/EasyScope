name: CI/CD Pipeline for EasyScope

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout repository
      - uses: actions/checkout@v4

      # Set up Java version
      - name: Set up Java version
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      # Build with Maven
      - name: Build with Maven
        run: mvn clean install -DskipTests

      # Run tests with debug and capture output
      - name: Run Tests with Debug
        run: mvn test -e -X || true

      # Upload Surefire Reports in case of failure
      - name: Upload Surefire Reports
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports
          path: target/surefire-reports

      # Upload JAR artifact
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: java-app
          path: target/*.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write

    steps:
      # Download build artifact
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: java-app

      # Login to Azure
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_DF14E7DB296B4F4EB4AB77E49AACF08B }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_EF8C49E1AFED46F6BECF8DED76B5B267 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_4188FF6A76C649B89EF485FEBE603E92 }}

      # Deploy to Azure Web App
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'EasyScope'
          slot-name: 'Production'
          package: '*.jar'

      # Set Spring Profile for Production
      - name: Set Production Profile
        run: echo "SPRING_PROFILES_ACTIVE=prod" >> $GITHUB_ENV
